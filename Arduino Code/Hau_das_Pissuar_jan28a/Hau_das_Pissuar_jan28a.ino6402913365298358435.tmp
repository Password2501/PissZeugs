/**********************************************************
This is example code for using the Adafruit liquid flow meters. 
Tested and works great with the Adafruit plastic and brass meters
    ------> http://www.adafruit.com/products/828
    ------> http://www.adafruit.com/products/833
Connect the red wire to +5V, 
the black wire to common ground 
and the yellow sensor wire to pin #2
Adafruit invests time and resources providing this open source code, 
please support Adafruit and open-source hardware by purchasing 
products from Adafruit!
Written by Limor Fried/Ladyada  for Adafruit Industries.  
BSD license, check license.txt for more information
All text above must be included in any redistribution
**********************************************************/
#include "LiquidCrystal.h"
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);


// which pin to use for reading the sensor? can use any pin!
#define FLOWSENSORPIN 7

// count how many pulses!
volatile uint16_t pulses = 0;
// track the state of the pulse pin
volatile uint8_t lastflowpinstate;
// you can try to keep time of how long it is between pulses
volatile uint32_t lastflowratetimer = 0;
// and use that to calculate a flow rate
volatile float timer;

// Declare global variables
bool session = false; // describes if a session is activ or not

// Interrupt is called once a millisecond, looks for any pulses from the sensor!
SIGNAL(TIMER0_COMPA_vect) {
  uint8_t x = digitalRead(FLOWSENSORPIN);
  
  if (x == lastflowpinstate) {
    //lastflowratetimer++;
    return; // nothing changed!
  }
  
  if (x == HIGH) {
    //low to high transition!
    pulses++;
    
  }
  lastflowpinstate = x;
  lastflowratetimer = 0;
}

void useInterrupt(boolean v) {
  if (v) {
    // Timer0 is already used for millis() - we'll just interrupt somewhere
    // in the middle and call the "Compare A" function above
    OCR0A = 0xAF;
    TIMSK0 |= _BV(OCIE0A);
  } else {
    // do not call the interrupt function COMPA anymore
    TIMSK0 &= ~_BV(OCIE0A);
  }
} 

void setup() {
   //Serial.begin(9600);
  // Serial.print("Flow sensor test!");
   lcd.begin(16, 2);
   // declare pin 9 to be an output for the contrast:
   pinMode(9, OUTPUT);  
   analogWrite(9, 50);  
   
   pinMode(FLOWSENSORPIN, INPUT);
   digitalWrite(FLOWSENSORPIN, HIGH);
   lastflowpinstate = digitalRead(FLOWSENSORPIN);
   useInterrupt(true);

   // Declare variables
   
  bool session = false; // describes if a session is activ or not
};

String name() {
  String vorName[] ={
        "Wurst",
        "Piss",
        "Bier",
        "Teddy",
        "Ochs'",
        "Arsch",
        "Sauf",
        "Haus",
        "Kack",
        "Klein"
      };
  String nachName[] = {
        "meister",
        "knecht",
        "kopf",
        "wurst",
        "bauer",
        "heini",
        "hans",
        "depp",
        "typ",
        "dirne",
        "bÃ¤r"
      };
  int array1 = random(10);
  int array2 = random(10);
  String vollname = vorName[array1]+nachName[array2];
  
  return (vollname);

};

void loop()                     // run over and over again
{ 
  // Calculates miliLiters from the pulses
  float mliters = pulses *2.556;
  
  //counts the time since the last signal
  lastflowratetimer++;
  timer = (lastflowratetimer/10);  // in seconds

  // Starts the Game else stays in Idle mode
  if  (timer >= 5){
    IdleMode();
    session = false;
  };
   if (timer == 0){
    session = gameStart(mliters,session);
    
   };
  
  

/*
//lcd.setCursor(0,1);
//lcd.print(digitalRead(FLOWSENSORPIN)+" ");
//lcd.print(pulses+" ");
//lcd.print(lastflowpinstate+" ");

  // if a plastic sensor use the following calculation
  // Sensor Frequency (Hz) = 7.5 * Q (Liters/min)
  // Liters = Q * time elapsed (seconds) / 60 (seconds/minute)
  // Liters = (Frequency (Pulses/second) / 7.5) * time elapsed (seconds) / 60
  // Liters = Pulses / (7.5 * 60)
    float liters = pulses;
    
    
    delay(100);
    float lastLiters = liters;
    
   */ 
   delay(100);
};
void IdleMode(){
  showHigh();
  lcd.setCursor(0,0);
  lcd.print("Idle Time: "); lcd.print( timer );
};

bool gameStart(int mliters, bool session){
  String vollname;
  if (session == false){
  vollname = name();
  session = true;
  };
  lcd.setCursor(0,1);
  lcd.print("Spiel gestartet!");
  
  printLCD(mliters,vollname);
 
 //magic
  return session;
  };
  
 void showHigh() {
  lcd.clear();
  lcd.setCursor(0,1);
  lcd.print("Highscore anzeig");
  return;
  };

void printLCD(int ergebniss, String vollname){ 
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print(vollname);
  lcd.setCursor(10,0);
  lcd.print(ergebniss); lcd.print(" ml  ");
  delay(100);
  };

  /*
  ################
  ################
  
  */
